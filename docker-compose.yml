# version: '3.8'

services:

  ds_backend:
      build: 
        context: ./backend
        dockerfile: Dockerfile
      container_name: ds_backend_container
      ports:
        - "3000:3000"
      env_file:
        - .env
      networks:
        - ds_network
      depends_on:
        mysql:
          condition: service_healthy
      
  # ds_frontend:
  #     build: 
  #       context: ./frontend
  #       dockerfile: Dockerfile
  #     container_name: ds_frontend_container
  #     env_file:
  #       - .env
  #     networks:
  #       - ds_network
  zookeeper:
    # image: wurstmeister/zookeeper:3.4.6
    # image: wurstmeister/zookeeper:latest #改成最新的版本
    image: bitnami/zookeeper:latest #改成最新的版本（M1 Mac要換成bitnami才支援）
    ports:
      - "2181:2181"
    networks:
      - ds_network
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes" #允許匿名登入

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:9093  #改成內部名稱
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ds_network
  mysql:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ${MYSQL_CONTAINER_NAME}
    # platform: linux/amd64
    stdin_open: true
    tty: true
    restart: always
    working_dir: /var/lib/mysql
    command: --bind-address=0.0.0.0
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ds_mysql_volume:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}      
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u${MYSQL_USER} -p${MYSQL_PASSWORD} && mysql -u${MYSQL_USER} -p${MYSQL_PASSWORD} -e 'show databases;'"]
      timeout: 25s
      retries: 10
    networks:
      - ds_network

  nginx:
    image: nginx
    container_name: ds_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - ds_network
    depends_on:
      - ds_backend
  
volumes:
  ds_mysql_volume:
    name: ${MYSQL_VOLUME_PATH}


networks:
  ds_network:
    name: ds_backend_network